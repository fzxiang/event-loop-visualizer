{
    "index.ts": {
        "file": {
            "contents": "export * from './src/main/app'\n"
        }
    },
    "package.json": {
        "file": {
            "contents": "{\n  \"name\": \"event-loop-visualizer-server\",\n  \"version\": \"1.0.0\",\n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"dev\": \"ts-node index.ts\"\n  },\n  \"dependencies\": {\n    \"ast-types\": \"^0.11.7\",\n    \"babel-core\": \"^6.26.3\",\n    \"falafel\": \"^2.1.0\",\n    \"lodash\": \"^4.17.11\",\n    \"node-fetch\": \"^2.3.0\",\n    \"pretty-format\": \"^24.0.0\",\n    \"recast\": \"^0.16.2\",\n    \"vm2\": \"^3.6.10\",\n    \"ws\": \"^6.1.3\"\n  },\n  \"devDependencies\": {\n    \"@babel/types\": \"^7.23.0\",\n    \"@types/lodash\": \"^4.14.200\",\n    \"@types/node\": \"^20.8.10\",\n    \"@types/ws\": \"^8.5.8\",\n    \"@webcontainer/api\": \"^1.1.8\",\n    \"ts-node\": \"^10.9.1\",\n    \"typescript\": \"^5.2.2\"\n  }\n}\n"
        }
    },
    "pnpm-lock.yaml": {
        "file": {
            "contents": "lockfileVersion: '6.0'\n\ndependencies:\n  ast-types:\n    specifier: ^0.11.7\n    version: 0.11.7\n  babel-core:\n    specifier: ^6.26.3\n    version: 6.26.3\n  falafel:\n    specifier: ^2.1.0\n    version: 2.1.0\n  lodash:\n    specifier: ^4.17.11\n    version: 4.17.11\n  node-fetch:\n    specifier: ^2.3.0\n    version: 2.3.0\n  pretty-format:\n    specifier: ^24.0.0\n    version: 24.0.0\n  recast:\n    specifier: ^0.16.2\n    version: 0.16.2\n  vm2:\n    specifier: ^3.6.10\n    version: 3.6.10\n  ws:\n    specifier: ^6.1.3\n    version: 6.1.3\n\ndevDependencies:\n  '@babel/types':\n    specifier: ^7.23.0\n    version: 7.23.0\n  '@types/lodash':\n    specifier: ^4.14.200\n    version: 4.14.200\n  '@types/node':\n    specifier: ^20.8.10\n    version: 20.8.10\n  '@types/ws':\n    specifier: ^8.5.8\n    version: 8.5.8\n  '@webcontainer/api':\n    specifier: ^1.1.8\n    version: 1.1.8\n  ts-node:\n    specifier: ^10.9.1\n    version: 10.9.1(@types/node@20.8.10)(typescript@5.2.2)\n  typescript:\n    specifier: ^5.2.2\n    version: 5.2.2\n\npackages:\n\n  /@babel/helper-string-parser@7.22.5:\n    resolution: {integrity: sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw==}\n    engines: {node: '>=6.9.0'}\n    dev: true\n\n  /@babel/helper-validator-identifier@7.22.20:\n    resolution: {integrity: sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A==}\n    engines: {node: '>=6.9.0'}\n    dev: true\n\n  /@babel/types@7.23.0:\n    resolution: {integrity: sha512-0oIyUfKoI3mSqMvsxBdclDwxXKXAUA8v/apZbc+iSyARYou1o8ZGDxbUYyLFoW2arqS2jDGqJuZvv1d/io1axg==}\n    engines: {node: '>=6.9.0'}\n    dependencies:\n      '@babel/helper-string-parser': 7.22.5\n      '@babel/helper-validator-identifier': 7.22.20\n      to-fast-properties: 2.0.0\n    dev: true\n\n  /@cspotcode/source-map-support@0.8.1:\n    resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}\n    engines: {node: '>=12'}\n    dependencies:\n      '@jridgewell/trace-mapping': 0.3.9\n    dev: true\n\n  /@jridgewell/resolve-uri@3.1.1:\n    resolution: {integrity: sha512-dSYZh7HhCDtCKm4QakX0xFpsRDqjjtZf/kjI/v3T3Nwt5r8/qz/M19F9ySyOqU94SXBmeG9ttTul+YnR4LOxFA==}\n    engines: {node: '>=6.0.0'}\n    dev: true\n\n  /@jridgewell/sourcemap-codec@1.4.15:\n    resolution: {integrity: sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==}\n    dev: true\n\n  /@jridgewell/trace-mapping@0.3.9:\n    resolution: {integrity: sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==}\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.1\n      '@jridgewell/sourcemap-codec': 1.4.15\n    dev: true\n\n  /@tsconfig/node10@1.0.9:\n    resolution: {integrity: sha512-jNsYVVxU8v5g43Erja32laIDHXeoNvFEpX33OK4d6hljo3jDhCBDhx5dhCCTMWUojscpAagGiRkBKxpdl9fxqA==}\n    dev: true\n\n  /@tsconfig/node12@1.0.11:\n    resolution: {integrity: sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==}\n    dev: true\n\n  /@tsconfig/node14@1.0.3:\n    resolution: {integrity: sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==}\n    dev: true\n\n  /@tsconfig/node16@1.0.4:\n    resolution: {integrity: sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==}\n    dev: true\n\n  /@types/lodash@4.14.200:\n    resolution: {integrity: sha512-YI/M/4HRImtNf3pJgbF+W6FrXovqj+T+/HpENLTooK9PnkacBsDpeP3IpHab40CClUfhNmdM2WTNP2sa2dni5Q==}\n    dev: true\n\n  /@types/node@20.8.10:\n    resolution: {integrity: sha512-TlgT8JntpcbmKUFzjhsyhGfP2fsiz1Mv56im6enJ905xG1DAYesxJaeSbGqQmAw8OWPdhyJGhGSQGKRNJ45u9w==}\n    dependencies:\n      undici-types: 5.26.5\n    dev: true\n\n  /@types/ws@8.5.8:\n    resolution: {integrity: sha512-flUksGIQCnJd6sZ1l5dqCEG/ksaoAg/eUwiLAGTJQcfgvZJKF++Ta4bJA6A5aPSJmsr+xlseHn4KLgVlNnvPTg==}\n    dependencies:\n      '@types/node': 20.8.10\n    dev: true\n\n  /@webcontainer/api@1.1.8:\n    resolution: {integrity: sha512-m9WRj38oCoFPrqZOTeJcncPjnZ00FZUMq9YHEXxdhAoYhhQ69Rz4qK5p444cIPaMy2j8H7HcNLcAIwMGWnpMpw==}\n    dev: true\n\n  /acorn-walk@8.3.0:\n    resolution: {integrity: sha512-FS7hV565M5l1R08MXqo8odwMTB02C2UqzB17RVgu9EyuYFBqJZ3/ZY97sQD5FewVu1UyDFc1yztUDrAwT0EypA==}\n    engines: {node: '>=0.4.0'}\n    dev: true\n\n  /acorn@5.7.4:\n    resolution: {integrity: sha512-1D++VG7BhrtvQpNbBzovKNc1FLGGEE/oGe7b9xJm/RFHMBeUaUGpluV9RLjZa47YFdPcDAenEYuq9pQPcMdLJg==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n    dev: false\n\n  /acorn@8.11.2:\n    resolution: {integrity: sha512-nc0Axzp/0FILLEVsm4fNwLCwMttvhEI263QtVPQcbpfZZ3ts0hLsZGOpE6czNlid7CJ9MlyH8reXkpsf3YUY4w==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n    dev: true\n\n  /ansi-regex@2.1.1:\n    resolution: {integrity: sha512-TIGnTpdo+E3+pCyAluZvtED5p5wCqLdezCyhPZzKPcxvFplEt4i+W7OONCKgeZFT3+y5NZZfOOS/Bdcanm1MYA==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /ansi-regex@4.1.1:\n    resolution: {integrity: sha512-ILlv4k/3f6vfQ4OoP2AGvirOktlQ98ZEL1k9FaQjxa3L1abBgbuTDAdPOpvbGncC0BTVQrl+OM8xZGK6tWXt7g==}\n    engines: {node: '>=6'}\n    dev: false\n\n  /ansi-styles@2.2.1:\n    resolution: {integrity: sha512-kmCevFghRiWM7HB5zTPULl4r9bVFSWjz62MhqizDGUrq2NWuNMQyuv4tHHoKJHs69M/MF64lEcHdYIocrdWQYA==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /ansi-styles@3.2.1:\n    resolution: {integrity: sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==}\n    engines: {node: '>=4'}\n    dependencies:\n      color-convert: 1.9.3\n    dev: false\n\n  /arg@4.1.3:\n    resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}\n    dev: true\n\n  /ast-types@0.11.7:\n    resolution: {integrity: sha512-2mP3TwtkY/aTv5X3ZsMpNAbOnyoC/aMJwJSoaELPkHId0nSQgFcnU4dRW3isxiz7+zBexk0ym3WNVjMiQBnJSw==}\n    engines: {node: '>=4'}\n    dev: false\n\n  /async-limiter@1.0.1:\n    resolution: {integrity: sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ==}\n    dev: false\n\n  /babel-code-frame@6.26.0:\n    resolution: {integrity: sha512-XqYMR2dfdGMW+hd0IUZ2PwK+fGeFkOxZJ0wY+JaQAHzt1Zx8LcvpiZD2NiGkEG8qx0CfkAOr5xt76d1e8vG90g==}\n    dependencies:\n      chalk: 1.1.3\n      esutils: 2.0.3\n      js-tokens: 3.0.2\n    dev: false\n\n  /babel-core@6.26.3:\n    resolution: {integrity: sha512-6jyFLuDmeidKmUEb3NM+/yawG0M2bDZ9Z1qbZP59cyHLz8kYGKYwpJP0UwUKKUiTRNvxfLesJnTedqczP7cTDA==}\n    dependencies:\n      babel-code-frame: 6.26.0\n      babel-generator: 6.26.1\n      babel-helpers: 6.24.1\n      babel-messages: 6.23.0\n      babel-register: 6.26.0\n      babel-runtime: 6.26.0\n      babel-template: 6.26.0\n      babel-traverse: 6.26.0\n      babel-types: 6.26.0\n      babylon: 6.18.0\n      convert-source-map: 1.9.0\n      debug: 2.6.9\n      json5: 0.5.1\n      lodash: 4.17.11\n      minimatch: 3.1.2\n      path-is-absolute: 1.0.1\n      private: 0.1.8\n      slash: 1.0.0\n      source-map: 0.5.7\n    transitivePeerDependencies:\n      - supports-color\n    dev: false\n\n  /babel-generator@6.26.1:\n    resolution: {integrity: sha512-HyfwY6ApZj7BYTcJURpM5tznulaBvyio7/0d4zFOeMPUmfxkCjHocCuoLa2SAGzBI8AREcH3eP3758F672DppA==}\n    dependencies:\n      babel-messages: 6.23.0\n      babel-runtime: 6.26.0\n      babel-types: 6.26.0\n      detect-indent: 4.0.0\n      jsesc: 1.3.0\n      lodash: 4.17.11\n      source-map: 0.5.7\n      trim-right: 1.0.1\n    dev: false\n\n  /babel-helpers@6.24.1:\n    resolution: {integrity: sha512-n7pFrqQm44TCYvrCDb0MqabAF+JUBq+ijBvNMUxpkLjJaAu32faIexewMumrH5KLLJ1HDyT0PTEqRyAe/GwwuQ==}\n    dependencies:\n      babel-runtime: 6.26.0\n      babel-template: 6.26.0\n    transitivePeerDependencies:\n      - supports-color\n    dev: false\n\n  /babel-messages@6.23.0:\n    resolution: {integrity: sha512-Bl3ZiA+LjqaMtNYopA9TYE9HP1tQ+E5dLxE0XrAzcIJeK2UqF0/EaqXwBn9esd4UmTfEab+P+UYQ1GnioFIb/w==}\n    dependencies:\n      babel-runtime: 6.26.0\n    dev: false\n\n  /babel-register@6.26.0:\n    resolution: {integrity: sha512-veliHlHX06wjaeY8xNITbveXSiI+ASFnOqvne/LaIJIqOWi2Ogmj91KOugEz/hoh/fwMhXNBJPCv8Xaz5CyM4A==}\n    dependencies:\n      babel-core: 6.26.3\n      babel-runtime: 6.26.0\n      core-js: 2.6.12\n      home-or-tmp: 2.0.0\n      lodash: 4.17.11\n      mkdirp: 0.5.6\n      source-map-support: 0.4.18\n    transitivePeerDependencies:\n      - supports-color\n    dev: false\n\n  /babel-runtime@6.26.0:\n    resolution: {integrity: sha512-ITKNuq2wKlW1fJg9sSW52eepoYgZBggvOAHC0u/CYu/qxQ9EVzThCgR69BnSXLHjy2f7SY5zaQ4yt7H9ZVxY2g==}\n    dependencies:\n      core-js: 2.6.12\n      regenerator-runtime: 0.11.1\n    dev: false\n\n  /babel-template@6.26.0:\n    resolution: {integrity: sha512-PCOcLFW7/eazGUKIoqH97sO9A2UYMahsn/yRQ7uOk37iutwjq7ODtcTNF+iFDSHNfkctqsLRjLP7URnOx0T1fg==}\n    dependencies:\n      babel-runtime: 6.26.0\n      babel-traverse: 6.26.0\n      babel-types: 6.26.0\n      babylon: 6.18.0\n      lodash: 4.17.11\n    transitivePeerDependencies:\n      - supports-color\n    dev: false\n\n  /babel-traverse@6.26.0:\n    resolution: {integrity: sha512-iSxeXx7apsjCHe9c7n8VtRXGzI2Bk1rBSOJgCCjfyXb6v1aCqE1KSEpq/8SXuVN8Ka/Rh1WDTF0MDzkvTA4MIA==}\n    dependencies:\n      babel-code-frame: 6.26.0\n      babel-messages: 6.23.0\n      babel-runtime: 6.26.0\n      babel-types: 6.26.0\n      babylon: 6.18.0\n      debug: 2.6.9\n      globals: 9.18.0\n      invariant: 2.2.4\n      lodash: 4.17.11\n    transitivePeerDependencies:\n      - supports-color\n    dev: false\n\n  /babel-types@6.26.0:\n    resolution: {integrity: sha512-zhe3V/26rCWsEZK8kZN+HaQj5yQ1CilTObixFzKW1UWjqG7618Twz6YEsCnjfg5gBcJh02DrpCkS9h98ZqDY+g==}\n    dependencies:\n      babel-runtime: 6.26.0\n      esutils: 2.0.3\n      lodash: 4.17.11\n      to-fast-properties: 1.0.3\n    dev: false\n\n  /babylon@6.18.0:\n    resolution: {integrity: sha512-q/UEjfGJ2Cm3oKV71DJz9d25TPnq5rhBVL2Q4fA5wcC3jcrdn7+SssEybFIxwAvvP+YCsCYNKughoF33GxgycQ==}\n    hasBin: true\n    dev: false\n\n  /balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n    dev: false\n\n  /brace-expansion@1.1.11:\n    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}\n    dependencies:\n      balanced-match: 1.0.2\n      concat-map: 0.0.1\n    dev: false\n\n  /chalk@1.1.3:\n    resolution: {integrity: sha512-U3lRVLMSlsCfjqYPbLyVv11M9CPW4I728d6TCKMAOJueEeB9/8o+eSsMnxPJD+Q+K909sdESg7C+tIkoH6on1A==}\n    engines: {node: '>=0.10.0'}\n    dependencies:\n      ansi-styles: 2.2.1\n      escape-string-regexp: 1.0.5\n      has-ansi: 2.0.0\n      strip-ansi: 3.0.1\n      supports-color: 2.0.0\n    dev: false\n\n  /color-convert@1.9.3:\n    resolution: {integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==}\n    dependencies:\n      color-name: 1.1.3\n    dev: false\n\n  /color-name@1.1.3:\n    resolution: {integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==}\n    dev: false\n\n  /concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n    dev: false\n\n  /convert-source-map@1.9.0:\n    resolution: {integrity: sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A==}\n    dev: false\n\n  /core-js@2.6.12:\n    resolution: {integrity: sha512-Kb2wC0fvsWfQrgk8HU5lW6U/Lcs8+9aaYcy4ZFc6DDlo4nZ7n70dEgE5rtR0oG6ufKDUnrwfWL1mXR5ljDatrQ==}\n    deprecated: core-js@<3.23.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Some versions have web compatibility issues. Please, upgrade your dependencies to the actual version of core-js.\n    requiresBuild: true\n    dev: false\n\n  /create-require@1.1.1:\n    resolution: {integrity: sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==}\n    dev: true\n\n  /debug@2.6.9:\n    resolution: {integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n    dependencies:\n      ms: 2.0.0\n    dev: false\n\n  /detect-indent@4.0.0:\n    resolution: {integrity: sha512-BDKtmHlOzwI7iRuEkhzsnPoi5ypEhWAJB5RvHWe1kMr06js3uK5B3734i3ui5Yd+wOJV1cpE4JnivPD283GU/A==}\n    engines: {node: '>=0.10.0'}\n    dependencies:\n      repeating: 2.0.1\n    dev: false\n\n  /diff@4.0.2:\n    resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}\n    engines: {node: '>=0.3.1'}\n    dev: true\n\n  /escape-string-regexp@1.0.5:\n    resolution: {integrity: sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==}\n    engines: {node: '>=0.8.0'}\n    dev: false\n\n  /esprima@4.0.1:\n    resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}\n    engines: {node: '>=4'}\n    hasBin: true\n    dev: false\n\n  /esutils@2.0.3:\n    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /falafel@2.1.0:\n    resolution: {integrity: sha512-6WM5fROvojK2PNz5l6pnkbkjiRRsSIRwiaavq0rywy1oLOcFrx5fBTgpDyUNG4TdqtKNM002FuoT/I2ww0XBqw==}\n    engines: {node: '>=0.4.0'}\n    dependencies:\n      acorn: 5.7.4\n      foreach: 2.0.6\n      isarray: 0.0.1\n      object-keys: 1.1.1\n    dev: false\n\n  /foreach@2.0.6:\n    resolution: {integrity: sha512-k6GAGDyqLe9JaebCsFCoudPPWfihKu8pylYXRlqP1J7ms39iPoTtk2fviNglIeQEwdh0bQeKJ01ZPyuyQvKzwg==}\n    dev: false\n\n  /globals@9.18.0:\n    resolution: {integrity: sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /has-ansi@2.0.0:\n    resolution: {integrity: sha512-C8vBJ8DwUCx19vhm7urhTuUsr4/IyP6l4VzNQDv+ryHQObW3TTTp9yB68WpYgRe2bbaGuZ/se74IqFeVnMnLZg==}\n    engines: {node: '>=0.10.0'}\n    dependencies:\n      ansi-regex: 2.1.1\n    dev: false\n\n  /home-or-tmp@2.0.0:\n    resolution: {integrity: sha512-ycURW7oUxE2sNiPVw1HVEFsW+ecOpJ5zaj7eC0RlwhibhRBod20muUN8qu/gzx956YrLolVvs1MTXwKgC2rVEg==}\n    engines: {node: '>=0.10.0'}\n    dependencies:\n      os-homedir: 1.0.2\n      os-tmpdir: 1.0.2\n    dev: false\n\n  /invariant@2.2.4:\n    resolution: {integrity: sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==}\n    dependencies:\n      loose-envify: 1.4.0\n    dev: false\n\n  /is-finite@1.1.0:\n    resolution: {integrity: sha512-cdyMtqX/BOqqNBBiKlIVkytNHm49MtMlYyn1zxzvJKWmFMlGzm+ry5BBfYyeY9YmNKbRSo/o7OX9w9ale0wg3w==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /isarray@0.0.1:\n    resolution: {integrity: sha512-D2S+3GLxWH+uhrNEcoh/fnmYeP8E8/zHl644d/jdA0g2uyXvy3sb0qxotE+ne0LtccHknQzWwZEzhak7oJ0COQ==}\n    dev: false\n\n  /js-tokens@3.0.2:\n    resolution: {integrity: sha512-RjTcuD4xjtthQkaWH7dFlH85L+QaVtSoOyGdZ3g6HFhS9dFNDfLyqgm2NFe2X6cQpeFmt0452FJjFG5UameExg==}\n    dev: false\n\n  /js-tokens@4.0.0:\n    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n    dev: false\n\n  /jsesc@1.3.0:\n    resolution: {integrity: sha512-Mke0DA0QjUWuJlhsE0ZPPhYiJkRap642SmI/4ztCFaUs6V2AiH1sfecc+57NgaryfAA2VR3v6O+CSjC1jZJKOA==}\n    hasBin: true\n    dev: false\n\n  /json5@0.5.1:\n    resolution: {integrity: sha512-4xrs1aW+6N5DalkqSVA8fxh458CXvR99WU8WLKmq4v8eWAL86Xo3BVqyd3SkA9wEVjCMqyvvRRkshAdOnBp5rw==}\n    hasBin: true\n    dev: false\n\n  /lodash@4.17.11:\n    resolution: {integrity: sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==}\n    dev: false\n\n  /loose-envify@1.4.0:\n    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}\n    hasBin: true\n    dependencies:\n      js-tokens: 4.0.0\n    dev: false\n\n  /make-error@1.3.6:\n    resolution: {integrity: sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==}\n    dev: true\n\n  /minimatch@3.1.2:\n    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n    dependencies:\n      brace-expansion: 1.1.11\n    dev: false\n\n  /minimist@1.2.8:\n    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}\n    dev: false\n\n  /mkdirp@0.5.6:\n    resolution: {integrity: sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==}\n    hasBin: true\n    dependencies:\n      minimist: 1.2.8\n    dev: false\n\n  /ms@2.0.0:\n    resolution: {integrity: sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==}\n    dev: false\n\n  /node-fetch@2.3.0:\n    resolution: {integrity: sha512-MOd8pV3fxENbryESLgVIeaGKrdl+uaYhCSSVkjeOb/31/njTpcis5aWfdqgNlHIrKOLRbMnfPINPOML2CIFeXA==}\n    engines: {node: 4.x || >=6.0.0}\n    dev: false\n\n  /object-keys@1.1.1:\n    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}\n    engines: {node: '>= 0.4'}\n    dev: false\n\n  /os-homedir@1.0.2:\n    resolution: {integrity: sha512-B5JU3cabzk8c67mRRd3ECmROafjYMXbuzlwtqdM8IbS8ktlTix8aFGb2bAGKrSRIlnfKwovGUUr72JUPyOb6kQ==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /os-tmpdir@1.0.2:\n    resolution: {integrity: sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /path-is-absolute@1.0.1:\n    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /pretty-format@24.0.0:\n    resolution: {integrity: sha512-LszZaKG665djUcqg5ZQq+XzezHLKrxsA86ZABTozp+oNhkdqa+tG2dX4qa6ERl5c/sRDrAa3lHmwnvKoP+OG/g==}\n    engines: {node: '>= 6'}\n    dependencies:\n      ansi-regex: 4.1.1\n      ansi-styles: 3.2.1\n    dev: false\n\n  /private@0.1.8:\n    resolution: {integrity: sha512-VvivMrbvd2nKkiG38qjULzlc+4Vx4wm/whI9pQD35YrARNnhxeiRktSOhSukRLFNlzg6Br/cJPet5J/u19r/mg==}\n    engines: {node: '>= 0.6'}\n    dev: false\n\n  /recast@0.16.2:\n    resolution: {integrity: sha512-O/7qXi51DPjRVdbrpNzoBQH5dnAPQNbfoOFyRiUwreTMJfIHYOEBzwuH+c0+/BTSJ3CQyKs6ILSWXhESH6Op3A==}\n    engines: {node: '>= 4'}\n    dependencies:\n      ast-types: 0.11.7\n      esprima: 4.0.1\n      private: 0.1.8\n      source-map: 0.6.1\n    dev: false\n\n  /regenerator-runtime@0.11.1:\n    resolution: {integrity: sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg==}\n    dev: false\n\n  /repeating@2.0.1:\n    resolution: {integrity: sha512-ZqtSMuVybkISo2OWvqvm7iHSWngvdaW3IpsT9/uP8v4gMi591LY6h35wdOfvQdWCKFWZWm2Y1Opp4kV7vQKT6A==}\n    engines: {node: '>=0.10.0'}\n    dependencies:\n      is-finite: 1.1.0\n    dev: false\n\n  /slash@1.0.0:\n    resolution: {integrity: sha512-3TYDR7xWt4dIqV2JauJr+EJeW356RXijHeUlO+8djJ+uBXPn8/2dpzBc8yQhh583sVvc9CvFAeQVgijsH+PNNg==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /source-map-support@0.4.18:\n    resolution: {integrity: sha512-try0/JqxPLF9nOjvSta7tVondkP5dwgyLDjVoyMDlmjugT2lRZ1OfsrYTkCd2hkDnJTKRbO/Rl3orm8vlsUzbA==}\n    dependencies:\n      source-map: 0.5.7\n    dev: false\n\n  /source-map@0.5.7:\n    resolution: {integrity: sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /source-map@0.6.1:\n    resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /strip-ansi@3.0.1:\n    resolution: {integrity: sha512-VhumSSbBqDTP8p2ZLKj40UjBCV4+v8bUSEpUb4KjRgWk9pbqGF4REFj6KEagidb2f/M6AzC0EmFyDNGaw9OCzg==}\n    engines: {node: '>=0.10.0'}\n    dependencies:\n      ansi-regex: 2.1.1\n    dev: false\n\n  /supports-color@2.0.0:\n    resolution: {integrity: sha512-KKNVtd6pCYgPIKU4cp2733HWYCpplQhddZLBUryaAHou723x+FRzQ5Df824Fj+IyyuiQTRoub4SnIFfIcrp70g==}\n    engines: {node: '>=0.8.0'}\n    dev: false\n\n  /to-fast-properties@1.0.3:\n    resolution: {integrity: sha512-lxrWP8ejsq+7E3nNjwYmUBMAgjMTZoTI+sdBOpvNyijeDLa29LUn9QaoXAHv4+Z578hbmHHJKZknzxVtvo77og==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /to-fast-properties@2.0.0:\n    resolution: {integrity: sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==}\n    engines: {node: '>=4'}\n    dev: true\n\n  /trim-right@1.0.1:\n    resolution: {integrity: sha512-WZGXGstmCWgeevgTL54hrCuw1dyMQIzWy7ZfqRJfSmJZBwklI15egmQytFP6bPidmw3M8d5yEowl1niq4vmqZw==}\n    engines: {node: '>=0.10.0'}\n    dev: false\n\n  /ts-node@10.9.1(@types/node@20.8.10)(typescript@5.2.2):\n    resolution: {integrity: sha512-NtVysVPkxxrwFGUUxGYhfux8k78pQB3JqYBXlLRZgdGUqTO5wU/UyHop5p70iEbGhB7q5KmiZiU0Y3KlJrScEw==}\n    hasBin: true\n    peerDependencies:\n      '@swc/core': '>=1.2.50'\n      '@swc/wasm': '>=1.2.50'\n      '@types/node': '*'\n      typescript: '>=2.7'\n    peerDependenciesMeta:\n      '@swc/core':\n        optional: true\n      '@swc/wasm':\n        optional: true\n    dependencies:\n      '@cspotcode/source-map-support': 0.8.1\n      '@tsconfig/node10': 1.0.9\n      '@tsconfig/node12': 1.0.11\n      '@tsconfig/node14': 1.0.3\n      '@tsconfig/node16': 1.0.4\n      '@types/node': 20.8.10\n      acorn: 8.11.2\n      acorn-walk: 8.3.0\n      arg: 4.1.3\n      create-require: 1.1.1\n      diff: 4.0.2\n      make-error: 1.3.6\n      typescript: 5.2.2\n      v8-compile-cache-lib: 3.0.1\n      yn: 3.1.1\n    dev: true\n\n  /typescript@5.2.2:\n    resolution: {integrity: sha512-mI4WrpHsbCIcwT9cF4FZvr80QUeKvsUsUvKDoR+X/7XHQH98xYD8YHZg7ANtz2GtZt/CBq2QJ0thkGJMHfqc1w==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n    dev: true\n\n  /undici-types@5.26.5:\n    resolution: {integrity: sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==}\n    dev: true\n\n  /v8-compile-cache-lib@3.0.1:\n    resolution: {integrity: sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==}\n    dev: true\n\n  /vm2@3.6.10:\n    resolution: {integrity: sha512-p4LBl7theIhmKaWPdCn25kEIG0bfDDEDx1lexXH7gcCu9pHIT+PKFgofwLHVHUGhe39lKExeaYVEZtdbQhdl2g==}\n    engines: {node: '>=6.0'}\n    deprecated: The library contains critical security issues and should not be used for production! The maintenance of the project has been discontinued. Consider migrating your code to isolated-vm.\n    hasBin: true\n    dev: false\n\n  /ws@6.1.3:\n    resolution: {integrity: sha512-tbSxiT+qJI223AP4iLfQbkbxkwdFcneYinM2+x46Gx2wgvbaOMO36czfdfVUBRTHvzAMRhDd98sA5d/BuWbQdg==}\n    peerDependencies:\n      bufferutil: ^4.0.1\n      utf-8-validate: ^5.0.2\n    peerDependenciesMeta:\n      bufferutil:\n        optional: true\n      utf-8-validate:\n        optional: true\n    dependencies:\n      async-limiter: 1.0.1\n    dev: false\n\n  /yn@3.1.1:\n    resolution: {integrity: sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==}\n    engines: {node: '>=6'}\n    dev: true\n"
        }
    },
    "src": {
        "directory": {
            "main": {
                "directory": {
                    "app.ts": {
                        "file": {
                            "contents": "import  WebSocket from 'ws';\nimport  { launchWorker } from './launchWorker';\nimport  { reduceEvents } from './eventsReducer';\n\n// Heroku provides a PORT env var that we have to use\nconst port = Number(process.env.PORT) || 8080;\nconst wss = new WebSocket.Server({ port });\nconsole.log('Running server on port:', port);\n\nconst Messages = {\n  RunCode: 'RunCode',\n};\n\nwss.on('connection', (ws) => {\n  ws.on('message', (message) => {\n    console.log('Received:', message)\n    const { type, payload } = JSON.parse(message.toString());\n\n    if (type === Messages.RunCode) {\n      let events: Events[] = [];\n      let isFinished = false;\n\n      const worker = launchWorker(payload, evtString => {\n        if (!isFinished) {\n          const evt = JSON.parse(evtString);\n          events.push(evt);\n\n          if (evt.type === 'Done') {\n            const reducedEvents = reduceEvents(events);\n            console.log(JSON.stringify(reducedEvents));\n            ws.send(JSON.stringify(reducedEvents));\n          }\n        }\n      });\n    } else {\n      console.error('Unknown message type:', type);\n    }\n  });\n});\n"
                        }
                    },
                    "eventsReducer.ts": {
                        "file": {
                            "contents": "function eventsReducer (state: State, evt: Events) {\n  const { type, payload } = evt;\n\n  if (type === 'EarlyTermination') state.events.push(evt);\n  if (type === 'UncaughtError') state.events.push(evt);\n\n  if (type === 'ConsoleLog') state.events.push(evt);\n  if (type === 'ConsoleWarn') state.events.push(evt);\n  if (type === 'ConsoleError') state.events.push(evt);\n\n  if (type === 'EnterFunction') {\n    if (state.prevEvt.type === 'BeforePromise') {\n      state.events.push({ type: 'DequeueMicrotask', payload: {} });\n    }\n    state.events.push(evt);\n  }\n  if (type == 'ExitFunction') state.events.push(evt);\n  if (type == 'ErrorFunction') state.events.push(evt);\n\n  if (type === 'InitPromise') state.events.push(evt);\n  if (type === 'ResolvePromise') {\n    state.events.push(evt);\n\n    const microtaskInfo = state.parentsIdsOfPromisesWithInvokedCallbacks\n      .find(({ id }) => id === payload.id);\n\n    if (microtaskInfo) {\n      state.events.push({\n        type: 'EnqueueMicrotask',\n        payload: { name: microtaskInfo.name }\n      });\n    }\n  }\n  if (type === 'BeforePromise') state.events.push(evt);\n  if (type === 'AfterPromise') state.events.push(evt);\n\n  if (type === 'InitTimeout') state.events.push(evt);\n  if (type === 'BeforeTimeout') {\n    state.events.push({ type: 'Rerender', payload: {} });\n    state.events.push(evt);\n  }\n\n  state.prevEvt = evt;\n\n  return state;\n}\n\n// TODO: Return line:column numbers for func calls\n\n\nexport function reduceEvents (events: Events[]): Events[] {\n  events = events\n  .slice()\n  .reverse()\n  .filter(\n      (evt, index, arr) =>\n          evt.type !== 'ResolvePromise' ||\n          index === arr.findIndex((e) => e.type === 'ResolvePromise' && e.payload.id === evt.payload.id)\n  )\n  .reverse();\n\n  const resolvedPromiseIds: string[] = events\n  .filter(({ type }) => type === 'ResolvePromise')\n  .map(({ payload: { id } }) => id);\n\n  const promisesWithInvokedCallbacksInfo: MicrotaskInfo[] = events\n  .filter(({ type }) =>\n      ['BeforePromise', 'EnterFunction', 'ExitFunction', 'ResolvePromise'].includes(type)\n  )\n  .reduce((result: MicrotaskInfo[], evt, index, arr) => {\n    if (evt.type === 'BeforePromise' && (arr[index + 1] || {}).type === 'EnterFunction') {\n      result.push({\n        id: evt.payload.id,\n        name: (arr[index + 1] as Events).payload.name\n      });\n    }\n    return result;\n  }, []);\n\n  const promiseChildIdToParentId: Record<string, string> = {};\n  events\n  .filter(({ type }) => type === 'InitPromise')\n  .forEach(({ payload: { id, parentId } }) => {\n    promiseChildIdToParentId[id] = parentId;\n  });\n\n  const parentsIdsOfPromisesWithInvokedCallbacks: MicrotaskInfo[] = promisesWithInvokedCallbacksInfo\n  .map(({ id: childId, name }) => ({\n    id: promiseChildIdToParentId[childId],\n    name,\n  }));\n\n  console.log({ resolvedPromiseIds, promisesWithInvokedCallbacksInfo, parentsIdsOfPromisesWithInvokedCallbacks });\n\n  return events.reduce(eventsReducer, {\n    events: [],\n    parentsIdsOfPromisesWithInvokedCallbacks,\n    prevEvt: {} as Events,\n  }).events;\n}\n\n"
                        }
                    },
                    "launchWorker.ts": {
                        "file": {
                            "contents": "import { Worker } from 'worker_threads';\n\nconst WORKER_FILE = './src/worker/worker.js';\n\nconst action = (type: string, payload: any) => JSON.stringify({ type, payload });\nconst Messages = {\n  UncaughtError: (error: Error) => action('UncaughtError', { error }),\n  Done: (exitCode: number) => action('Done', { exitCode }),\n}\n\nexport function launchWorker (jsSourceCode: string, onEvent: (message: any) => void)  {\n  const worker = new Worker(WORKER_FILE, { workerData: jsSourceCode });\n\n  worker.on('message', (message) => {\n    console.log('Worker MESSAGE:', message)\n    onEvent(message);\n  });\n\n  worker.on('error', (error) => {\n    console.error('Worker ERROR:', error)\n    onEvent(Messages.UncaughtError({\n      name: error.name,\n      stack: error.stack,\n      message: error.message,\n    }));\n  });\n\n  worker.on('exit', (code) => {\n    console.log('Worker EXIT:', code)\n    onEvent(Messages.Done(code));\n  });\n\n  return worker;\n}\n\n"
                        }
                    },
                    "types.d.ts": {
                        "file": {
                            "contents": "declare type Events = {\n    type: string;\n    payload: any;\n}\n\ninterface MicrotaskInfo {\n    id: string;\n    name: string;\n}\n\ninterface State {\n    events: Events[];\n    parentsIdsOfPromisesWithInvokedCallbacks: MicrotaskInfo[];\n    prevEvt: Events;\n}\n"
                        }
                    }
                }
            },
            "worker": {
                "directory": {
                    "worker.js": {
                        "file": {
                            "contents": "const { parentPort, workerData } = require('worker_threads');\nconst asyncHooks = require('async_hooks');\nconst util = require('util');\nconst fs = require('fs');\nconst babel = require('babel-core');\nconst { VM } = require('vm2');\n\nconst fetch = require('node-fetch');\nconst _ = require('lodash');\nconst falafel = require('falafel');\nconst prettyFormat = require('pretty-format');\n\nconst LOG_FILE = './log.txt';\nfs.writeFileSync(LOG_FILE, '');\nconst log = (...msg) => fs.appendFileSync(\n  LOG_FILE,\n  msg.map(m => _.isString(m) ? m : prettyFormat(m)).join(' ') + '\\n'\n);\n\nconst event = (type, payload) => ({ type, payload });\nconst Events = {\n  ConsoleLog: (message) => event('ConsoleLog', { message }),\n  ConsoleWarn: (message) => event('ConsoleWarn', { message }),\n  ConsoleError: (message) => event('ConsoleError', { message }),\n\n  EnterFunction: (id, name, start, end) => event('EnterFunction', { id, name, start, end }),\n  ExitFunction: (id, name, start, end) => event('ExitFunction', { id, name, start, end }),\n  ErrorFunction: (message, id, name, start, end) => event('ErrorFunction', { message, id, name, start, end }),\n\n  InitPromise: (id, parentId) => event('InitPromise', { id, parentId }),\n  ResolvePromise: (id) => event('ResolvePromise', { id }),\n  BeforePromise: (id) => event('BeforePromise', { id }),\n  AfterPromise: (id) => event('AfterPromise', { id }),\n\n  InitTimeout: (id, callbackName) => event('InitTimeout', { id, callbackName }),\n  BeforeTimeout: (id) => event('BeforeTimeout', { id }),\n\n  UncaughtError: (error) => event('UncaughtError', {\n    name: (error || {}).name,\n    stack: (error || {}).stack,\n    message: (error || {}).message,\n  }),\n  EarlyTermination: (message) => event('EarlyTermination', { message }),\n};\n\nlet events = [];\nconst postEvent = (event) => {\n  events.push(event);\n  parentPort.postMessage(JSON.stringify(event));\n}\n\n// We only care about these async hook types:\n//   PROMISE, Timeout\nconst ignoredAsyncHookTypes = [\n  'FSEVENTWRAP',\n  'FSREQCALLBACK',\n  'GETADDRINFOREQWRAP',\n  'GETNAMEINFOREQWRAP',\n  'HTTPPARSER',\n  'JSSTREAM',\n  'PIPECONNECTWRAP',\n  'PIPEWRAP',\n  'PROCESSWRAP',\n  'QUERYWRAP',\n  'SHUTDOWNWRAP',\n  'SIGNALWRAP',\n  'STATWATCHER',\n  'TCPCONNECTWRAP',\n  'TCPSERVERWRAP',\n  'TCPWRAP',\n  'TTYWRAP',\n  'UDPSENDWRAP',\n  'UDPWRAP',\n  'WRITEWRAP',\n  'ZLIB',\n  'SSLCONNECTION',\n  'PBKDF2REQUEST',\n  'RANDOMBYTESREQUEST',\n  'TLSWRAP',\n  'DNSCHANNEL',\n];\nconst isIgnoredHookType = (type) => ignoredAsyncHookTypes.includes(type);\n\nconst eid = asyncHooks.executionAsyncId();\nconst tid = asyncHooks.triggerAsyncId();\n\nconst asyncIdToResource = {};\n\nconst init = (asyncId, type, triggerAsyncId, resource) => {\n  asyncIdToResource[asyncId] = resource;\n  if (type === 'PROMISE') {\n    postEvent(Events.InitPromise(asyncId, triggerAsyncId));\n  }\n  if (type === 'Timeout') {\n    const callbackName = resource._onTimeout.name || 'anonymous';\n    postEvent(Events.InitTimeout(asyncId, callbackName));\n  }\n}\n\nconst before = (asyncId) => {\n  const resource = asyncIdToResource[asyncId] || {};\n  const resourceName = (resource.constructor).name;\n  if (resourceName === 'PromiseWrap') {\n    postEvent(Events.BeforePromise(asyncId));\n  }\n  if (resourceName === 'Timeout') {\n    postEvent(Events.BeforeTimeout(asyncId));\n  }\n}\n\nconst after = (asyncId) => {\n  const resource = asyncIdToResource[asyncId] || {};\n  const resourceName = (resource.constructor).name;\n  if (resourceName === 'PromiseWrap') {\n    postEvent(Events.AfterPromise(asyncId));\n  }\n}\n\nconst destroy = (asyncId) => {\n  const resource = asyncIdToResource[asyncId] || {};\n}\n\nconst promiseResolve = (asyncId) => {\n  const promise = asyncIdToResource[asyncId].promise;\n  postEvent(Events.ResolvePromise(asyncId));\n}\n\nasyncHooks\n  .createHook({ init, before, after, destroy, promiseResolve })\n  .enable();\n\nconst functionDefinitionTypes = [\n  'FunctionDeclaration',\n  'FunctionExpression',\n  'ArrowFunctionExpression',\n];\nconst arrowFnImplicitReturnTypesRegex = /Literal|Identifier|(\\w)*Expression/;\n\n// Inspired by: http://alltom.com/pages/instrumenting-javascript/\nconst traceBlock = (code, fnName, start, end) => `{\n  const idWithExtensionToAvoidConflicts = nextId();\n  Tracer.enterFunc(idWithExtensionToAvoidConflicts, '${fnName}', ${start}, ${end});\n  try {\n    ${code}\n  } catch (e) {\n    Tracer.errorFunc(e.message, idWithExtensionToAvoidConflicts, '${fnName}', ${start}, ${end});\n    throw e;\n  } finally {\n    Tracer.exitFunc(idWithExtensionToAvoidConflicts, '${fnName}', ${start}, ${end});\n  }\n}`\n\nconst jsSourceCode = workerData;\n\n// TODO: Convert all this to babel transform(s)\n// TODO: HANDLE GENERATORS/ASYNC-AWAIT\nconst output = falafel(jsSourceCode, (node) => {\n\n  const parentType = node.parent && node.parent.type;\n  const isBlockStatement = node.type === 'BlockStatement';\n  const isFunctionBody = functionDefinitionTypes.includes(parentType);\n  const isArrowFnReturnType = arrowFnImplicitReturnTypesRegex.test(node.type);\n  const isArrowFunctionBody = parentType === 'ArrowFunctionExpression';\n  const isArrowFn = node.type === 'ArrowFunctionExpression';\n\n  if (isBlockStatement && isFunctionBody) {\n    const { start, end } = node.parent;\n    const fnName = (node.parent.id && node.parent.id.name) || 'anonymous';\n    const block = node.source();\n    const blockWithoutCurlies = block.substring(1, block.length - 1);\n    node.update(traceBlock(blockWithoutCurlies, fnName, start, end))\n  }\n  else if (isArrowFnReturnType && isArrowFunctionBody) {\n    const { start, end, params } = node.parent;\n\n    const isParamIdentifier = params.some(param => param === node);\n\n    if (!isParamIdentifier) {\n      const fnName = (node.parent.id && node.parent.id.name) || 'anonymous';\n      const block = node.source();\n      const returnedBlock = `return (${block});`;\n      node.update(traceBlock(returnedBlock, fnName, start, end))\n    }\n  }\n  else if (isArrowFn) {\n    const body = node.source();\n    const firstCurly = body.indexOf('{');\n    const lastCurly = body.lastIndexOf('}');\n    const bodyHasCurlies = firstCurly !== -1 && lastCurly !== -1;\n\n    // We already updated all arrow function bodies to have curlies, so here\n    // we can assume if a body looks like `({ ... })`, then we need to remove\n    // the parenthesis.\n    if (bodyHasCurlies) {\n      const parensNeedStripped = body[firstCurly - 1] === '(';\n      if (parensNeedStripped) {\n        const bodyBlock = body.substring(firstCurly, lastCurly + 1);\n        const bodyWithoutParens = `() => ${bodyBlock}`;\n        node.update(bodyWithoutParens);\n      }\n    }\n  }\n\n});\n\nconst modifiedSource = babel\n  .transform(output.toString(), { plugins: [traceLoops] })\n  .code;\n\n// TODO: Maybe change this name to avoid conflicts?\nconst nextId = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\nconst arrToPrettyStr = (arr) =>\n  arr.map(a => _.isString(a) ? a : prettyFormat(a)).join(' ') + '\\n'\n\nconst START_TIME = Date.now();\nconst TIMEOUT_MILLIS = 5000;\nconst EVENT_LIMIT = 500;\n\nconst Tracer = {\n  enterFunc: (id, name, start, end) => postEvent(Events.EnterFunction(id, name, start, end)),\n  exitFunc: (id, name, start, end) => postEvent(Events.ExitFunction(id, name, start, end)),\n  errorFunc: (message, id, name, start, end) => postEvent(Events.ErrorFunction(message, id, name, start, end)),\n  log: (...args) => postEvent(Events.ConsoleLog(arrToPrettyStr(args))),\n  warn: (...args) => postEvent(Events.ConsoleWarn(arrToPrettyStr(args))),\n  error: (...args) => postEvent(Events.ConsoleError(arrToPrettyStr(args))),\n  iterateLoop: () => {\n    const hasTimedOut = (Date.now() - START_TIME) > TIMEOUT_MILLIS;\n    const reachedEventLimit = events.length >= EVENT_LIMIT;\n    const shouldTerminate = reachedEventLimit || hasTimedOut;\n    if (shouldTerminate) {\n      postEvent(Events.EarlyTermination(hasTimedOut\n        ? `Terminated early: Timeout of ${TIMEOUT_MILLIS} millis exceeded.`\n        : `Termianted early: Event limit of ${EVENT_LIMIT} exceeded.`\n      ));\n      process.exit(1);\n    }\n  },\n};\n\n// E.g. call stack size exceeded errors...\nprocess.on('uncaughtException', (err) => {\n  postEvent(Events.UncaughtError(err));\n  process.exit(1);\n});\n\nconst vm = new VM({\n  timeout: 6000,\n  sandbox: {\n    nextId,\n    Tracer,\n    fetch,\n    _,\n    lodash: _,\n    setImmediate,\n    setTimeout,\n    process,\n    console: {\n      log: Tracer.log,\n      warn: Tracer.warn,\n      error: Tracer.error,\n    },\n  },\n});\n\nvm.run(modifiedSource);\n\n\n/**\n * 这个babel插件会在循环的最后添加一个Tracer.iterateLoop()的调用\n * @param babel\n * @returns {{visitor: {WhileStatement: transformLoop, ForStatement: transformLoop, DoWhileStatement: transformLoop, ForInStatement: transformLoop, ForOfStatement: transformLoop}}}\n */\nfunction traceLoops(babel) {\n  const t = babel.types;\n\n  const transformLoop = (path) => {\n    const iterateLoop = t.memberExpression(\n        t.identifier('Tracer'),\n        t.identifier('iterateLoop'),\n    );\n    const callIterateLoop = t.callExpression(iterateLoop, []);\n    path.get('body').pushContainer('body', callIterateLoop);\n  };\n\n  return {\n    visitor: {\n      WhileStatement: transformLoop,\n      DoWhileStatement: transformLoop,\n      ForStatement: transformLoop,\n      ForInStatement: transformLoop,\n      ForOfStatement: transformLoop,\n    }\n  };\n}\n"
                        }
                    }
                }
            }
        }
    },
    "tsconfig.json": {
        "file": {
            "contents": "{\n  \"compilerOptions\": {\n    \"target\": \"es6\", // 中文注释：指定ECMAScript目标版本\n    \"module\": \"commonjs\", // 中文注释：指定生成哪个模块系统代码\n    \"strict\": true, // 中文注释：启用所有严格类型检查\n    \"esModuleInterop\": true, // 中文注释：允许使用es6的模块语法\n    \"allowJs\": true, // 中文注释：允许编译js文件\n    \"baseUrl\": \"./\", // 中文注释：解析非相对模块名的基准目录\n    \"forceConsistentCasingInFileNames\": true, // 中文注释：不允许对同一个文件使用不一致的引用\n    \"resolveJsonModule\": true, // 中文注释：允许使用import导入json模块\n    \"outDir\": \"dist\",  // 中文注释：指定输出目录\n    \"typeRoots\": [\n      \"./lib/*.d.ts\",\n      \"./typings/*.d.ts\"\n    ]\n  },\n  \"exclude\": [\"**/node_modules/**\", \"**/dist/**\"],\n  \"files\": [\"./src/main/types.d.ts\"]\n}\n"
        }
    }
}